<project name="bug82416" default="rebuild">
	<target name="mono-1.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,ONLY_1_1,MONO" />
		<property name="expect.failure" value="false" />
		<property name="policy.supported" value="false" />
	</target>

	<target name="mono-2.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,ONLY_2_0,MONO" />
		<property name="expect.failure" value="true" />
		<property name="policy.supported" value="true" />
	</target>

	<target name="net-1.1">
		<property name="csc.defines" value="NET_1_0,NET_1_1,ONLY_1_1" />
		<property name="expect.failure" value="false" />
		<property name="policy.supported" value="false" />
	</target>

	<target name="net-2.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,ONLY_2_0" />
		<property name="expect.failure" value="true" />
		<property name="policy.supported" value="true" />
	</target>

	<property name="frameworks" value="mono-1.0,mono-2.0,net-1.1,net-2.0" />

	<target name="clean">
		<delete>
			<fileset>
				<include name="test.exe" />
				<include name="test.exe.config" />
			</fileset>
		</delete>
	</target>

	<target name="build">
		<property name="original.targetframework" value="${nant.settings.currentframework}" />

		<foreach property="framework" item="String" in="${frameworks}" delim=",">
			<if test="${framework::exists(framework)}">
				<property name="nant.settings.currentframework" value="${framework}" />
				<call target="${nant.settings.currentframework}" />
				<call target="run" />
				<call target="clean" />
			</if>
		</foreach>

		<property name="nant.settings.currentframework" value="${original.targetframework}" />
	</target>

	<target name="compile">
		<csc target="exe" define="${csc.defines}" output="test.exe" warnaserror="true" warninglevel="4">
			<sources>
				<include name="test.cs" />
			</sources>
		</csc>
	</target>

	<target name="run" depends="compile">
		<exec program="test.exe" managed="true" resultproperty="exitcode" failonerror="${not(expect.failure)}" output="out" />
		<fail if="${expect.failure and int::parse(exitcode) == 0}">#A1</fail>
		<fail unless="${file::exists('out')}">#A2</fail>
		<loadfile file="out" property="out" />
		<fail if="${string::index-of(out, 'Unhandled Exception: System.Exception: Exception from thread') == -1}">#A3</fail>
		<delete file="out" />
		<if test="${policy.supported}">
			<copy file="policy.exe.config" tofile="test.exe.config" />
			<exec program="test.exe" managed="true" output="out" />
			<fail unless="${file::exists('out')}">#B1</fail>
			<loadfile file="out" property="out" />
			<fail if="${string::index-of(out, 'Unhandled Exception: System.Exception: Exception from thread') == -1}">#B2</fail>
		</if>
	</target>

	<target name="rebuild" depends="clean, build" />
</project>
