<project name="bug432366" default="rebuild">
	<include buildfile="../../build/common.build" />

	<property name="frameworks" value="${framework::get-frameworks('installed desktop')}" />

	<target name="clean">
		<delete>
			<fileset>
				<include name="lib?.dll" />
				<include name="Mono.Cecil.dll" />
				<include name="out" />
				<include name="test.exe" />
			</fileset>
		</delete>
	</target>

	<target name="compile" depends="init">
		<csc target="library" define="${csc.defines}" output="libA.dll" warnaserror="false" warninglevel="4">
			<sources>
				<include name="libA.cs" />
			</sources>
		</csc>
		<csc target="library" define="${csc.defines}" output="libB.dll" warnaserror="false" warninglevel="4">
			<sources>
				<include name="libB.cs" />
			</sources>
		</csc>
		<csc target="library" define="${csc.defines}" output="libC.dll" warnaserror="false" warninglevel="4">
			<sources>
				<include name="libC.cs" />
			</sources>
		</csc>
		<csc target="library" define="${csc.defines}" output="libD.dll" warnaserror="false" warninglevel="4">
			<sources>
				<include name="libD.cs" />
			</sources>
		</csc>
		<csc target="exe" define="${csc.defines}" output="test.exe" warnaserror="true" warninglevel="4">
			<sources>
				<include name="../../build/common/Assert.cs" />
				<include name="test.cs" />
			</sources>
			<references basedir="../../build/lib">
				<include name="Mono.Cecil.dll" />
			</references>
		</csc>
	</target>

	<target name="run-test" depends="compile">
		<copy todir=".">
			<fileset basedir="../../build/lib">
				<include name="Mono.Cecil.dll" />
			</fileset>
		</copy>
		<exec program="${framework::get-tool-path('sn.exe')}" managed="strict" if="${framework::get-family(framework::get-target-framework()) == 'net'}">
			<arg value="-Vr" />
			<arg file="libD.dll" />
		</exec>
		<exec program="test.exe" managed="strict" output="out" />
		<fail if="${file::exists('out')}" />
		<exec program="${framework::get-tool-path('sn.exe')}" managed="strict" if="${framework::get-family(framework::get-target-framework()) == 'net'}">
			<arg value="-Vu" />
			<arg file="libD.dll" />
		</exec>
	</target>
</project>
