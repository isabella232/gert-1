<project name="bug82528" default="rebuild">
	<target name="mono-1.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,ONLY_1_1,MONO" />
		<property name="compiler.version" value="MCS" />
	</target>

	<target name="mono-2.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,ONLY_2_0,MONO" />
		<property name="compiler.version" value="MCS" />
	</target>

	<target name="net-1.1">
		<property name="csc.defines" value="NET_1_0,NET_1_1,ONLY_1_1" />
		<property name="compiler.version" value="CSC-1.0" />
	</target>

	<target name="net-2.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,ONLY_2_0" />
		<property name="compiler.version" value="CSC-2.0" />
	</target>

	<property name="frameworks" value="mono-1.0,mono-2.0,net-1.1,net-2.0" />

	<target name="clean">
		<delete>
			<fileset>
				<include name="out" />
				<include name="test.exe" />
			</fileset>
		</delete>
	</target>

	<target name="build">
		<property name="original.targetframework" value="${nant.settings.currentframework}" />

		<foreach property="framework" item="String" in="${frameworks}" delim=",">
			<if test="${framework::exists(framework)}">
				<property name="nant.settings.currentframework" value="${framework}" />
				<call target="${nant.settings.currentframework}" />
				<call target="compile" />
				<call target="clean" />
			</if>
		</foreach>

		<property name="nant.settings.currentframework" value="${original.targetframework}" />
	</target>

	<target name="compile">
		<record name="out" action="Start" />
		<csc target="exe" define="${csc.defines}" output="test.exe" warnaserror="true" warninglevel="4" failonerror="false">
			<sources>
				<include name="test.cs" />
			</sources>
		</csc>
		<record name="out" action="Close" />
		<fail if="${file::exists('test.exe')}">#1</fail>
		<fail unless="${file::exists('out')}">#2</fail>
		<loadfile file="out" property="out" />
		<choose>
			<when test="${compiler.version == 'CSC-1.0'}">
				<fail if="${string::index-of(out,'error CS0123: Method ''Program.ParseA(string, System.IFormatProvider)'' does not match delegate ''object ParseFun(string, System.IFormatProvider)''') == -1}">#3</fail>
				<fail if="${string::index-of(out,'error CS0123: Method ''Program.ParseB(string, System.IFormatProvider)'' does not match delegate ''object ParseFun(string, System.IFormatProvider)''') == -1}">#4</fail>
			</when>
			<when test="${compiler.version == 'CSC-2.0'}">
				<fail if="${string::index-of(out,'error CS0407: ''bool Program.ParseA(string, System.IFormatProvider)'' has the wrong return type') == -1}">#3</fail>
				<fail if="${string::index-of(out,'error CS0407: ''void Program.ParseB(string, System.IFormatProvider)'' has the wrong return type') == -1}">#4</fail>
			</when>
			<when test="${compiler.version == 'MCS'}">
				<fail if="${string::index-of(out,'error CS0407: A method or delegate `bool Program.ParseA(string, System.IFormatProvider)'' return type does not match delegate `object ParseFun(string, System.IFormatProvider)'' return type') == -1}">#3</fail>
				<fail if="${string::index-of(out,'error CS0407: A method or delegate `void Program.ParseB(string, System.IFormatProvider)'' return type does not match delegate `object ParseFun(string, System.IFormatProvider)'' return type') == -1}">#4</fail>
			</when>
		</choose>
	</target>

	<target name="rebuild" depends="clean, build" />
</project>
