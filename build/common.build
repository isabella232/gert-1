<project name="common.build" default="rebuild">
	<target name="mono-1.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,ONLY_1_1,MONO" />
		<property name="xsp.package" value="xsp" />
		<property name="test.frameworks" value="mono-1.0,net-1.1" />
	</target>

	<target name="mono-2.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,ONLY_2_0,MONO" />
		<property name="xsp.package" value="xsp-2" />
		<property name="test.frameworks" value="mono-2.0,net-2.0" />
	</target>

	<target name="mono-3.5">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,NET_3_5,ONLY_3_5,MONO" />
		<property name="xsp.package" value="xsp-2" />
		<property name="test.frameworks" value="mono-3.5,net-3.5" />
	</target>

	<target name="moonlight-2.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,NET_2_1,ONLY_2_1,MONO" />
		<property name="test.frameworks" value="moonlight-2.0,silverlight-2.0" />
	</target>

	<target name="net-1.0">
		<property name="csc.defines" value="NET_1_0,ONLY_1_0" />
		<property name="test.frameworks" value="net-1.0" />
	</target>

	<target name="net-1.1">
		<property name="csc.defines" value="NET_1_0,NET_1_1,ONLY_1_1" />
		<property name="xsp.package" value="xsp" />
		<property name="test.frameworks" value="mono-1.0,net-1.1" />
	</target>

	<target name="net-2.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,ONLY_2_0" />
		<property name="xsp.package" value="xsp-2" />
		<property name="test.frameworks" value="mono-2.0,net-2.0" />
	</target>

	<target name="net-3.5">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,NET_3_5,ONLY_3_5" />
		<property name="xsp.package" value="xsp-2" />
		<property name="test.frameworks" value="mono-3.5,net-3.5" />
	</target>

	<target name="silverlight-2.0">
		<property name="csc.defines" value="NET_1_0,NET_1_1,NET_2_0,NET_2_1,ONLY_2_1" />
		<property name="test.frameworks" value="moonlight-2.0,silverlight-2.0" />
	</target>

	<target name="init">
		<if test="${not target::exists(nant.settings.currentframework)}">
			<fail>Framework '${nant.settings.currentframework}' is not supported.</fail>
		</if>
		<call target="${nant.settings.currentframework}" />
		<call target="${nant.settings.currentframework}-init"
			if="${target::exists(nant.settings.currentframework+'-init')}" />
	</target>

	<target name="build">
		<property name="original.targetframework" value="${nant.settings.currentframework}" />

		<foreach property="framework" item="String" in="${frameworks}" delim=",">
			<if test="${framework::exists(framework) and target::exists(framework)}">
				<!-- check if framework is excluded -->
				<property name="excluded" value="false" />
				<if test="${property::exists('frameworks.excluded') and frameworks.excluded!=''}">
					<foreach property="exclude" item="String" in="${frameworks.excluded}" delim=",">
						<if test="${framework == exclude}">
							<property name="excluded" value="true" />
						</if>
					</foreach>
				</if>

				<if test="${not bool::parse(excluded)}">
					<property name="nant.settings.currentframework" value="${framework}" />
					<call target="run-test" />
					<call target="clean" />
				</if>
			</if>
		</foreach>

		<!--
			reset value of frameworks.exclude to ensure excludes from one build
			file do not affect another
		-->
		<property name="frameworks.exclude" value="" />
		<!--
			restore original target framework
		-->
		<property name="nant.settings.currentframework" value="${original.targetframework}" />
	</target>

	<target name="rebuild" depends="clean, build" />
</project>
